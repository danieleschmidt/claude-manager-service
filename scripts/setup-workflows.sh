#!/bin/bash
# Automated GitHub Actions Workflow Setup Script
# Generated by Claude Code Manager

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}🚀 Setting up GitHub Actions workflows...${NC}"
echo ""

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}❌ Error: Not in a Git repository${NC}"
    exit 1
fi

echo -e "${GREEN}✅ Git repository detected${NC}"

# Check if workflow templates exist
if [ ! -d "docs/github-workflows-templates" ]; then
    echo -e "${RED}❌ Error: Workflow templates directory not found${NC}"
    echo "Expected: docs/github-workflows-templates/"
    exit 1
fi

echo -e "${GREEN}✅ Workflow templates directory found${NC}"

# Count workflow templates
template_count=$(find docs/github-workflows-templates -name "*.yml" | wc -l)
if [ "$template_count" -eq 0 ]; then
    echo -e "${RED}❌ Error: No workflow template files found${NC}"
    exit 1
fi

echo -e "${GREEN}✅ Found $template_count workflow templates${NC}"

# Create .github/workflows directory if it doesn't exist
echo -e "${BLUE}📁 Creating workflows directory...${NC}"
mkdir -p .github/workflows
echo -e "${GREEN}✅ .github/workflows directory ready${NC}"

# Check for existing workflows
existing_workflows=$(find .github/workflows -name "*.yml" -o -name "*.yaml" 2>/dev/null | wc -l)
if [ "$existing_workflows" -gt 0 ]; then
    echo -e "${YELLOW}⚠️  Warning: $existing_workflows existing workflow(s) found${NC}"
    echo "Existing workflows:"
    find .github/workflows -name "*.yml" -o -name "*.yaml" 2>/dev/null | sed 's/^/  - /'
    echo ""
    read -p "Do you want to continue and potentially overwrite existing workflows? (y/N): " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}Setup cancelled by user${NC}"
        exit 0
    fi
fi

# Copy workflow templates
echo -e "${BLUE}📄 Copying workflow templates...${NC}"
cp docs/github-workflows-templates/*.yml .github/workflows/

# Verify copied files
copied_count=$(find .github/workflows -name "*.yml" | wc -l)
echo -e "${GREEN}✅ Copied $copied_count workflow files${NC}"

# List copied workflows
echo ""
echo -e "${BLUE}Copied workflows:${NC}"
for workflow in .github/workflows/*.yml; do
    if [ -f "$workflow" ]; then
        filename=$(basename "$workflow")
        # Extract workflow name from YAML if possible
        workflow_name=$(grep "^name:" "$workflow" 2>/dev/null | head -1 | sed 's/name:[[:space:]]*//' | tr -d '"\047')
        if [ -n "$workflow_name" ]; then
            echo -e "  ${GREEN}✅${NC} $filename - $workflow_name"
        else
            echo -e "  ${GREEN}✅${NC} $filename"
        fi
    fi
done

# Check for required secrets (information only)
echo ""
echo -e "${BLUE}🔐 Checking for required secrets...${NC}"
required_secrets=("DOCKERHUB_USERNAME" "DOCKERHUB_TOKEN" "SNYK_TOKEN")
optional_secrets=("PYPI_API_TOKEN" "SLACK_WEBHOOK_URL" "FOSSA_API_KEY")

echo -e "${YELLOW}Required secrets (must be configured in GitHub repository settings):${NC}"
for secret in "${required_secrets[@]}"; do
    echo "  - $secret"
done

echo -e "${YELLOW}Optional secrets (for enhanced functionality):${NC}"
for secret in "${optional_secrets[@]}"; do
    echo "  - $secret"
done

echo ""
echo -e "${BLUE}📦 To configure secrets using GitHub CLI:${NC}"
echo "  gh secret set DOCKERHUB_USERNAME --body 'your_username'"
echo "  gh secret set DOCKERHUB_TOKEN --body 'your_token'"
echo "  gh secret set SNYK_TOKEN --body 'your_snyk_token'"
echo ""
echo -e "${BLUE}Or configure them manually at:${NC}"
echo "  https://github.com/$(git config --get remote.origin.url | sed -n 's#.*github.com[:/]\([^.]*\).*#\1#p')/settings/secrets/actions"

# Git operations
echo ""
echo -e "${BLUE}📝 Preparing Git commit...${NC}"

# Check if there are changes to commit
if git diff --quiet .github/workflows/ && git diff --cached --quiet .github/workflows/; then
    echo -e "${YELLOW}⚠️  No changes detected in workflows${NC}"
    echo "This might mean workflows were already present and identical."
else
    # Add workflows to git
    git add .github/workflows/
    
    # Create commit message
    commit_message="feat: add comprehensive GitHub Actions workflows

- Added CI/CD pipeline with multi-Python testing
- Integrated security scanning and vulnerability detection  
- Configured automated release management
- Added performance testing and monitoring
- Set up dependency management automation

Workflows included:"
    
    for workflow in .github/workflows/*.yml; do
        if [ -f "$workflow" ]; then
            filename=$(basename "$workflow")
            workflow_name=$(grep "^name:" "$workflow" 2>/dev/null | head -1 | sed 's/name:[[:space:]]*//' | tr -d '"\047')
            if [ -n "$workflow_name" ]; then
                commit_message="$commit_message\n- $filename: $workflow_name"
            else
                commit_message="$commit_message\n- $filename"
            fi
        fi
    done
    
    commit_message="$commit_message\n\n🤖 Generated with Claude Code"
    
    # Commit changes
    echo -e "${GREEN}✅ Committing workflows to Git...${NC}"
    git commit -m "$(echo -e "$commit_message")"
    echo -e "${GREEN}✅ Workflows committed successfully${NC}"
fi

# Summary and next steps
echo ""
echo -e "${GREEN}🎉 GitHub Actions workflows have been set up successfully!${NC}"
echo ""
echo -e "${BLUE}📋 Next steps:${NC}"
echo "  1. Configure required secrets in your GitHub repository settings"
echo "  2. Review and customize workflow files if needed (optional)"
echo "  3. Push changes to trigger the first workflow run:"
echo -e "     ${YELLOW}git push origin $(git branch --show-current)${NC}"
echo "  4. Monitor workflow execution in the GitHub Actions tab"
echo "  5. Set up branch protection rules (recommended)"
echo ""
echo -e "${BLUE}📚 Documentation and guides:${NC}"
echo "  - Workflow templates: docs/github-workflows-templates/README.md"
echo "  - Setup guide: docs/GITHUB_WORKFLOWS_SETUP.md"
echo "  - Deployment guide: docs/workflows/DEPLOYMENT_GUIDE.md"
echo ""
echo -e "${BLUE}🔧 Useful commands:${NC}"
echo "  - List workflows: ls -la .github/workflows/"
echo "  - Validate workflows: ./scripts/validate-workflows.py"
echo "  - Check workflow runs: gh run list"
echo "  - Configure secrets: gh secret set SECRET_NAME --body 'value'"
echo ""
echo -e "${GREEN}Setup complete! 🚀${NC}"

exit 0